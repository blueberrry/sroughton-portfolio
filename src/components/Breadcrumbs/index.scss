@import '../../root.scss';

@mixin customArrow($type: both, $colors: auto, $size: medium) {
  // Define default sizes
  $default-size: (
    small: 0.5,
    medium: 1,
  );

  // Extract size multiplier from the $default-size map
  $multiplier: map-get($default-size, $size);

  // Calculate sizes based on the multiplier
  $border-size: 20px * $multiplier;
  $right-position: 20px * $multiplier;

  // Extract colors from the $colors list
  $default-before-color: #fff; // Default color for ::before
  $default-after-color: #000; // Default color for ::after
  $before-color: if(length($colors) > 0, nth($colors, 1), $default-before-color);
  $after-color: if(length($colors) > 1, nth($colors, 2), $default-after-color);

  @if $type == 'before' {
    &:before {
      content: '';

      border-top: $border-size solid transparent;
      border-bottom: $border-size solid transparent;
      border-left: $border-size solid $before-color;
      position: absolute;
      left: 0;
      top: 0;
    }

    &:hover {
      &:before {
        border-lef-color: $before-color;
      }
    }
  }

  @if $type == 'after' {
    &:after {
      content: '';

      border-top: $border-size solid transparent;
      border-bottom: $border-size solid transparent;
      border-left: $border-size solid $after-color;
      position: absolute;
      right: -$right-position;
      top: 0;
      z-index: 1;
    }

    &:hover {
      &:after {
        border-left-color: $before-color;
      }
    }
  }

  @if $type == 'both' {
    @include customArrow(before, $colors, $size);
    @include customArrow(after, $colors, $size);
  }
}

nav.breadcrumb-container {
  //max-width: 200px;
  > ol.breadcrumb-list {
    width: inherit;
    display: flex;
    // justify-content: space-between;
    list-style-type: none;

    // todo: consider adding these to css reset
    margin-block-start: 0;
    margin-block-end: 0;
    padding-inline-start: 0;

    background: var(--secondary-color);

    padding: 0.5rem;

    //   overflow-x: scroll; // todo: mobile behaviour, focus item, snap to (if needed) OR alternative menu for mobile

    li.breadcrumb-item {
      position: relative;
      display: inline-table;
      text-wrap: nowrap;

      &.active {
        color: red !important;
      }

      a {
        line-height: 1rem;
        margin: 0 5px 0 0;
        height: 40px;

        padding: 15px 10px 0 30px;
        padding: 1rem 1rem 0.75rem 2.5rem;
        @include media('<tablet') {
          // height: 25px;
          // padding: 1rem 0.75rem 0rem 2rem;
          // todo: change smaller
          height: 20px;
          padding: 3px 10px 0 20px;
        }

        position: relative;
        // float: left;
        // display: block;
        display: flex;
        justify-content: center;
        align-items: center;
        background: var(--primary-color);
        font-size: $font-sz-body;

        @include media('<tablet') {
          font-size: $font-sz-sm;
        }

        text-align: center;
        text-decoration: none;

        &:link,
        &:hover,
        &:visited,
        &:focus {
          color: var(--inverse-color);
          text-decoration: none;
        }

        &:hover {
          background: var(--secondary-color);
        }

        > .icon-container {
          margin-right: 0.5rem;
        }
      }

      &:not(:first-of-type) {
        a {
          @include customArrow(both, (var(--secondary-color), var(--primary-color)), medium); // Specify size as 'small'
          @include media('<tablet') {
            @include customArrow(
              both,
              (var(--secondary-color), var(--primary-color)),
              small
            ); // Specify size as 'small'
          }
        }
      }

      &.first {
        a {
          background: var(--tertiary-color);
          border-top-left-radius: 5px;
          border-bottom-left-radius: 5px;

          &:before {
            content: '';
            display: none;
          }

          @include customArrow(after, (var(--primary-color), var(--tertiary-color)), medium); // Specify size as 'small'

          @include media('<tablet') {
            @include customArrow(
              after,
              (var(--primary-color), var(--tertiary-color)),
              small
            ); // Specify size as 'small'
          }

          &:hover {
            background: var(--primary-color);
          }
        }
      }

      &.last {
        a {
          // background: var(--default-accent);
          border-top-right-radius: 5px;
          border-bottom-right-radius: 5px;
          &:after {
            content: '';
            display: none;
          }
        }
      }
    }
  }

  // unused atm
}
