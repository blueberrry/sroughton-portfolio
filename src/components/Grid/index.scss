@import '../../root.scss';

$cols-3: repeat(3, 1fr) !default;
$cols-6: repeat(6, 1fr) !default;
$cols-9: repeat(9, 1fr) !default;
$cols-12: repeat(12, 1fr) !default;

$rows-3: repeat(3, 1fr) !default;
$rows-6: repeat(6, 1fr) !default;
$rows-9: repeat(9, 1fr) !default;
$rows-12: repeat(12, 1fr) !default;

// link grid high res
@mixin default-grid {
  grid-gap: $spcr-md;
  margin: $spcr-md;
  grid-template-columns: $cols-3;
  grid-template-rows: $rows-3;
}

// link grid high res - higher res grid for more granular control of grid-areas
@mixin btn-grid-hr {
  grid-gap: $spcr-md;
  margin: $spcr-md;
  grid-template-columns: $cols-12;
  grid-template-rows: $rows-6;
  grid-template-areas:
    'tile_01 tile_01 tile_01 tile_01 tile_02 tile_02 tile_02 tile_02 tile_02 tile_02 tile_02 tile_02'
    'tile_01 tile_01 tile_01 tile_01 tile_02 tile_02 tile_02 tile_02 tile_02 tile_02 tile_02 tile_02'
    'tile_01 tile_01 tile_01 tile_01 tile_03 tile_03 tile_03 tile_03 tile_04 tile_04 tile_04 tile_04'
    'tile_01 tile_01 tile_01 tile_01 tile_03 tile_03 tile_03 tile_03 tile_04 tile_04 tile_04 tile_04'
    'tile_05 tile_05 tile_05 tile_05 tile_05 tile_05 tile_05 tile_05 tile_06 tile_06 tile_06 tile_06'
    'tile_05 tile_05 tile_05 tile_05 tile_05 tile_05 tile_05 tile_05  tile_06 tile_06 tile_06 tile_06';
  justify-items: stretch;
}

// todo: try to override elements with child elements or find better way to config grid
// todo: grid should be able to be passed arbitrary number of elements
// todo: grid-child-item should have one of three configs (sm md lg)
// todo: document progress for article

// link grid low res
@mixin btn-grid-lr {
  grid-gap: $spcr-sm;
  margin: $spcr-sm;
  grid-template-columns: $cols-6;
  grid-template-rows: $rows-3;
  grid-template-areas:
    'tile_01 tile_01 tile_02 tile_02 tile_02 tile_02'
    'tile_01 tile_01 tile_03 tile_03 tile_04 tile_04'
    'tile_05 tile_05 tile_05 tile_05 tile_06 tile_06';
  justify-items: stretch;
}

/* default grid-container set up */
ul.grid-container {
  margin: 0;
  min-width: 300px;
  max-width: 100vw;
  display: grid;
  padding-inline-start: 0; // rmv default u styles
  list-style-type: none;
  @include default-grid;

  li.item-auto {
    background: grey;
    min-height: 100px;
    // height: 100%;
    transition: all 0.6s ease-in;
    //list-style-type: none;
    // preset areas
    // Loop through grid areas and generate styles
    // Loop through grid areas and generate styles
    @each $area, $grid in $grid-areas {
      &.area-#{$area} {
        grid-area: $grid;

        // Check if there's a theme for this area and apply hover style
        @if map-has-key($themes, $area) {
          &:hover {
            @extend .#{map-get($themes, $area)};
          }
        }
      }
    }

    // &.item-hovered {
    // }
    // &.item-hovered-a {
    //   background-color: $primary-hex;
    //   background-color: transparent; // todo: should always have colour
    // }
    // &.item-hovered-secondary {
    //   background-color: $secondary-hex;
    // }
    // &.item-hovered-tertiary {
    //   background-color: $tertiary-hex;
    // }
    // &.item-hovered-info {
    //   background-color: $shade-1-hex;
    // }
  }
}

ul.grid-3-3 {
  @include btn-grid-lr;
  // width: 800px;
  // height: 600px;
  // max-width: 47rem;
  // margin: 0 auto;
  background-color: transparent; // todo: should always have colour
  &.theme-primary {
    @extend .theme-primary;
  }

  &.theme-secondary {
    @extend .theme-secondary;
  }

  &.theme-tertiary {
    @extend .theme-tertiary;
  }

  &.theme-info {
    @extend .theme-info;
  }

  @include media('>tablet') {
    @include btn-grid-hr;
  }
}
